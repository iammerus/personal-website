---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import BlogPost from '@components/vue/BlogPost.vue'
import { getCollection, render } from 'astro:content'
import type { CollectionEntry } from 'astro:content'

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => {
    return !data.draft
  })

  return posts.map((post) => ({
    params: { post: post.id },
    props: { post },
  }))
}

interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props
const { Content } = await render(post)

const readingTime = Math.ceil(post.body.length / 1000)

const author = {
  name: post.data.author,
  image: '/astronaut-hero-img.webp',
  bio: 'Senior Full-Stack Engineer with 5+ years of experience building scalable web applications.',
}

// Get related posts (mock for now - can be enhanced later)
const allPosts = await getCollection('blog', ({ data }) => !data.draft)
const relatedPosts = allPosts
  .filter(p => p.id !== post.id && p.data.category === post.data.category)
  .slice(0, 3)
  .map((relatedPost, index) => ({
    ...relatedPost,
    featuredImage: relatedPost.data.image || '/assets/images/posts/post-image-1.png',
    readingTime: Math.ceil(relatedPost.body.length / 1000)
  }))
---

<DefaultLayout 
  title={post.data.title} 
  description={post.data.description}
  url={`blog/${post.id}`}
>
  <BlogPost 
    post={{
      ...post,
      featuredImage: post.data.image || '/assets/images/posts/post-image-1.png'
    }}
    author={author}
    readingTime={readingTime}
    relatedPosts={relatedPosts}
    client:load
  >
    <Content slot="content" />
  </BlogPost>
</DefaultLayout>

