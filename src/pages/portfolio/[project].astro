---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import ProjectDetails from '@components/vue/ProjectDetails.vue'

// Import project data
import projectsData from '../../../data/projects.json'

// Define types for our project data
interface ProjectMetric {
  value: string
  description: string
}

interface Project {
  title: string
  company: string
  industry?: string
  role: string
  duration: string
  experience?: string
  skills: string[]
  description: string
  problem: string
  contributions: string
  outcomes: string
  metrics?: ProjectMetric[]
  hasProjectLink?: boolean
  projectLink?: string
}

export async function getStaticPaths() {
  // Map project data with images - defined inside getStaticPaths
  const projectImageMap: Record<string, string> = {
    'Redflag': '/assets/images/projects/redflag.svg',
    'Zeki': '/assets/images/projects/zeki.svg',
    'Integrated Clinical Practice Management System': '/assets/images/projects/community_dental_clinical.png',
    'ePremier League Platform': '/assets/images/projects/epremier_league_logo.webp',
    'Nyaradzo SIP': '/assets/images/projects/sahwira_internation_plan.png'
  }

  const projects = projectsData.projects.map((project: any, index: number) => ({
    ...project,
    id: project.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),
    featuredImage: projectImageMap[project.title] || '/assets/images/projects/community_dental_clinical.png',
    author: 'Melvin Mupondori'
  }))

  return projects.map((project) => ({
    params: { project: project.id },
    props: { project },
  }))
}

interface Props {
  project: any & { id: string; featuredImage: string; author: string }
}

const { project } = Astro.props

// Define projectImageMap again for use in related projects
const projectImageMap: Record<string, string> = {
  'Redflag': '/assets/images/projects/redflag.svg',
  'Zeki': '/assets/images/projects/zeki.svg',
  'Integrated Clinical Practice Management System': '/assets/images/projects/community_dental_clinical.png',
  'ePremier League Platform': '/assets/images/projects/epremier_league_logo.webp',
  'Nyaradzo SIP': '/assets/images/projects/sahwira_internation_plan.png'
}

// Get related projects (same category or similar company)
const allProjects = projectsData.projects.map((p: any, index: number) => ({
  ...p,
  id: p.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),
  featuredImage: projectImageMap[p.title] || '/assets/images/projects/community_dental_clinical.png'
}))

const relatedProjects = allProjects
  .filter(p => p.id !== project.id)
  .slice(0, 3)
---

<DefaultLayout 
  title={project.title} 
  description={project.description}
  url={`portfolio/${project.id}`}
>
  <ProjectDetails 
    project={project}
    relatedProjects={relatedProjects}
    client:load
  />
</DefaultLayout>

