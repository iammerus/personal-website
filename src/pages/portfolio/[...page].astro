---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import type { GetStaticPaths, Page } from 'astro'

// Import project data
import projectsData from '../../../data/projects.json'

// Define types for our project data
interface ProjectMetric {
  value: string
  description: string
}

interface Project {
  title: string
  company: string
  role: string
  duration: string
  skills: string[]
  description: string
  problem: string
  contributions: string
  outcomes: string
  metrics?: ProjectMetric[]
  hasProjectLink?: boolean
}

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  // Map project data with images
  const projectImageMap: Record<string, string> = {
    'Integrated Clinical Practice Management System': '/assets/images/projects/community_dental_clinical.png',
    'ePremier League Platform': '/assets/images/projects/epremier_league_logo.webp',
    'Nyaradzo SIP': '/assets/images/projects/sahwira_internation_plan.png'
  }

  // Transform projects data to include images and IDs
  // Ensure projectsData.projects is an array before mapping
  const projectsSource: Project[] = Array.isArray(projectsData?.projects) ? projectsData.projects : [];

  if (!Array.isArray(projectsData?.projects)) {
    console.warn(`[...page].astro: projectsData.projects is not an array or projectsData is undefined. Check data/projects.json. Found: ${JSON.stringify(projectsData?.projects)}. Using empty array for projects.`);
  }

  const transformedProjects = projectsSource.map((project: Project, index: number) => ({
    ...project,
    id: project.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),
    featuredImage: projectImageMap[project.title] || '/assets/images/projects/community_dental_clinical.png',
    author: 'Melvin Mupondori'
  }));

  return paginate(transformedProjects, { pageSize: 6 });
};

interface Props {
  page: Page<Project & { id: string; featuredImage: string; author: string }>
}

const { page } = Astro.props
---

<DefaultLayout
  title="Portfolio"
  description="Showcase of real-world projects and technical achievements, featuring scalable web applications and enterprise solutions built with modern technologies."
>
  <PageHeader
    title="Portfolio"
    subtitle="A showcase of real-world projects I've built throughout my career, from enterprise-grade clinical management systems to global esports platforms serving 100K+ concurrent users."
    bgType="bordered"
  />
  
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Project {page.start + 1} through {page.end + 1} of {page.total} total projects</em></p>
      <ul class="my-3 grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
        {
          page.data.map((project) => (
            <li>
              <Card
                img={project.featuredImage}
                url={'/portfolio/' + project.id}
                title={project.title}
                footer={`${project.role} at ${project.company}`}
              >
                <div class="space-y-2">
                  <p class="text-sm text-gray-600 dark:text-gray-400">{project.duration}</p>
                  <p>{project.description}</p>
                  <div class="flex flex-wrap gap-1 mt-3">
                    {project.skills.slice(0, 4).map((skill) => (
                      <span class="px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full">
                        {skill}
                      </span>
                    ))}
                    {project.skills.length > 4 && (
                      <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-full">
                        +{project.skills.length - 4} more
                      </span>
                    )}
                  </div>
                </div>
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/portfolio' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/portfolio/${Math.ceil(page.total / page.size)}` : null}
          currentPage={`${page.currentPage}`}
          totalPages={`${Math.ceil(page.total / page.size)}`}
          ariaLabel="Portfolio pagination"
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss" is:global>
  @use '../../assets/scss/base/mixins' as *;

  .card {
    h3 {
      margin-block-end: var(--space-xs);
      line-height: 0.75;
    }

    a {
      @include text-decoration(transparent, var(--foreground-color), 4px, 2px);
    }
  }
</style>
