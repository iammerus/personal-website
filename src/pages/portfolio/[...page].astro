---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import PortfolioShowcase from '@components/vue/PortfolioShowcase.vue'
import type { GetStaticPaths, Page } from 'astro'

// Import project data
import projectsData from '../../../data/projects.json'

// Define types for our project data
interface ProjectMetric {
  value: string
  description: string
}

interface Project {
  title: string
  company: string
  role: string
  duration: string
  experience?: string
  skills: string[]
  description: string
  problem: string
  contributions: string
  outcomes: string
  metrics?: ProjectMetric[]
  hasProjectLink?: boolean
  projectLink?: string
}

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  // Map project data with images
  const projectImageMap: Record<string, string> = {
    'Redflag': '/assets/images/projects/redflag.svg',
    'Zeki': '/assets/images/projects/zeki.svg',
    'Integrated Clinical Practice Management System': '/assets/images/projects/community_dental_clinical.png',
    'ePremier League Platform': '/assets/images/projects/epremier_league_logo.webp',
    'Nyaradzo SIP': '/assets/images/projects/sahwira_internation_plan.png'
  }

  // Transform projects data to include images and IDs
  const projectsSource: Project[] = Array.isArray(projectsData?.projects) ? projectsData.projects : [];

  if (!Array.isArray(projectsData?.projects)) {
    console.warn(`[...page].astro: projectsData.projects is not an array or projectsData is undefined. Check data/projects.json. Found: ${JSON.stringify(projectsData?.projects)}. Using empty array for projects.`);
  }

  const transformedProjects = projectsSource.map((project: Project, index: number) => ({
    ...project,
    id: project.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),
    featuredImage: projectImageMap[project.title] || '/assets/images/projects/community_dental_clinical.png',
    author: 'Melvin Mupondori'
  }));

  return paginate(transformedProjects, { pageSize: 6 });
};

interface Props {
  page: Page<Project & { id: string; featuredImage: string; author: string }>
}

const { page } = Astro.props
---

<DefaultLayout
  title="Portfolio"
  description="Showcase of real-world projects and technical achievements, featuring scalable web applications and enterprise solutions built with modern technologies."
>
  <PortfolioShowcase 
    projects={page.data}
    page={page}
    client:load
  />
</DefaultLayout>

