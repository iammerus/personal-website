{
  "projects": [
    {
      "title": "Redflag",
      "company": "Open Source Project",
      "industry": "Security Tools",
      "role": "Creator & Maintainer",
      "duration": "2024 - Present",
      "experience": "I created this project from scratch as an open source tool",
      "skills": [
        "Rust",
        "Git",
        "Security",
        "CLI Development",
        "Cross-platform Development",
        "Pattern Matching",
        "Entropy Analysis",
        "GitHub Actions"
      ],
      "description": "Redflag is a lightweight, cross-platform secret scanner designed to identify potentially sensitive information in codebases. Built with Rust for performance and reliability, it helps developers and security teams detect exposed secrets, API keys, and credentials before they reach production environments.",
      "problem": "Development teams often accidentally commit sensitive information like API keys, passwords, and tokens to version control systems. Traditional security scanning tools are often heavy, slow, or lack comprehensive git history analysis capabilities, leaving organizations vulnerable to credential exposure.",
      "contributions": "Architected and implemented a high-performance secret scanning engine using Rust. Developed advanced pattern matching with regex support, Shannon entropy detection for high-entropy strings, and comprehensive git history analysis. Created flexible configuration system with custom exclusion policies and multiple output formats including JSON for CI/CD integration.",
      "outcomes": "The tool provides fast, accurate secret detection across multiple file types with configurable severity levels. Its git history scanning capabilities allow teams to audit entire repository histories, while the lightweight design ensures minimal impact on development workflows. The cross-platform support and GitHub Actions integration make it accessible for teams of all sizes.",
      "hasProjectLink": true,
      "projectLink": "https://github.com/BuggyCorp/redflag"
    },
    {
      "title": "Zeki",
      "company": "Open Source Project",
      "industry": "Developer Tools",
      "role": "Creator & Maintainer",
      "duration": "2024 - Present",
      "experience": "I created this project from scratch as an open source framework",
      "skills": [
        "PHP",
        "WhatsApp API",
        "AI Integration",
        "Framework Development",
        "OpenAI",
        "Anthropic",
        "Google AI",
        "Composer",
        "Middleware Architecture",
        "Bot Development"
      ],
      "description": "Zeki is a flexible and extensible PHP framework for building WhatsApp bots. It provides a comprehensive solution for creating intelligent conversational experiences with support for multiple WhatsApp providers, AI-powered intent detection, and rich interactive messaging capabilities.",
      "problem": "Building WhatsApp bots requires handling complex API integrations, managing conversation state, processing different message types, and implementing intelligent response systems. Existing solutions lack flexibility, extensibility, and comprehensive AI integration, making it difficult for developers to create sophisticated bot experiences.",
      "contributions": "Architected and implemented a modular framework with support for multiple WhatsApp providers (Facebook Cloud API, Twilio). Developed an intent-based message handling system with AI-powered detection using OpenAI, Anthropic, and Google AI. Created middleware architecture for flexible request processing and implemented support for interactive messages, media handling, and conversation state management.",
      "outcomes": "The framework enables developers to rapidly build sophisticated WhatsApp bots with minimal boilerplate code. Its extensible architecture supports custom intents, middleware, and AI providers, while the comprehensive feature set handles everything from simple text responses to complex interactive conversations with rich media support.",
      "hasProjectLink": true,
      "projectLink": "https://github.com/iammerus/zeki"
    },
    {
      "title": "Integrated Clinical Practice Management System",
      "company": "Community Dental Partners",
      "role": "Senior Software Engineer",
      "duration": "Nov 2022 - Present",
      "experience": "I was involved from inception to launch (0 -> 1)",
      "skills": [
        "API Integration",
        "AWS",
        "AWS RDS",
        "CI/CD",
        "Docker",
        "JavaScript",
        "MySQL",
        "Node.js",
        "Playwright",
        "RabbitMQ",
        "React",
        "TypeScript"
      ],
      "metrics": [
        {
          "value": "90%",
          "description": "Faster insurance verification and claims processing"
        },
        {
          "value": "77%",
          "description": "Reduction in data entry errors for patient records and billing"
        }
      ],
      "description": "Community Dental Partners needed an intranet solution to centralize clinical and administrative operations. As a Senior Software Engineer, I designed this system to streamline their dental care services.",
      "problem": "Fragmented patient information, inefficient X-ray management, complex insurance verification, and manual doctor hour tracking caused administrative delays and impacted patient care.",
      "contributions": "Designed backend services using Node.js for patient management, X-ray handling, insurance workflows, and call tracking. Developed React interfaces for data management and centralized data into a secure database with automated workflows.",
      "outcomes": "The system transformed operations, improving productivity, data accuracy, and patient service quality while supporting superior dental care delivery."
    },
    {
      "title": "ePremier League Platform",
      "company": "Gfinity",
      "industry": ["Gaming & e-Sports", "Entertainment"],
      "role": "Software Engineer",
      "duration": "Jul 2021 - Jul 2022",
      "skills": [
        "Nuxt",
        "TypeScript",
        "Vue.js",
        "AWS",
        "JavaScript"
      ],
      "description": "As a Senior Software Engineer at Gfinity, I developed the official ePremier League platform. This global esports competition brought EA SPORTS FCâ„¢ to thousands of players worldwide.",
      "problem": "Build a scalable digital ecosystem for multi-stage tournaments managing player registrations, scheduling, real-time results, and competitive integrity globally.",
      "contributions": "Led backend development using Zend for authentication, profiles, matchmaking, and results. Created UI with Vue.js and Naive UI, designed cloud infrastructure, and developed APIs for live event data integration.",
      "outcomes": "The platform successfully supported complex tournament requirements during peak periods. Seamless broadcast integration elevated visibility and enhanced engagement for players and fans.",
      "hasProjectLink": false
    },
    {
      "title": "Nyaradzo SIP",
      "company": "Webdev Zimbabwe",
      "industry": "Consulting",
      "role": "Full-stack Developer",
      "duration": "Jan 2018 - Dec 2018",
      "experience": "I was involved from inception to launch (0 -> 1)",
      "skills": [
        "API Integration",
        "Google Cloud / GCP",
        "JavaScript",
        "Laravel",
        "TypeScript",
        "Vue.js"
      ],
      "metrics": [
        {
          "value": "17,367",
          "description": "New policies created through the platform since its inception"
        },
        {
          "value": "130,800",
          "description": "Premium payments processed since the project went online"
        }
      ],
      "description": "Nyaradzo, Zimbabwe's leading funeral insurance provider, sought to expand its services to the Zimbabwean diaspora, ensuring seamless access to their offerings worldwide. The project aimed to create a digital solution to bridge the gap for clients abroad, maintaining their connection to cultural traditions while providing financial security.",
      "problem": "The challenge was to address the difficulties faced by international clients, including time zone differences, complex payment methods, and restricted access to policy management, which hindered their ability to manage their funeral insurance effectively.",
      "contributions": "I designed and implemented the Sahwira Self-Service Portal (SIP). I created a platform that offered global 24/7 access, secure international payment options, and a comprehensive self-service experience, including digital onboarding and real-time policy management.",
      "hasProjectLink": false
    }
  ]
}